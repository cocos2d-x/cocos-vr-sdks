{
    "AppDelegate.cpp":{
        "includes":[
            "malivr-sdk/CCVRMaliVRRenderer.h",
            "malivr-sdk/CCVRMaliVRShaders.h"
        ],
        "codes":[
            "auto vrImpl = new VRMaliVRRenderer;",
            "glview->setVR(vrImpl);",
            "std::string programHeaders = \"#version 300 es\\n #extension GL_OVR_multiview2 : enable\\n precision highp float;\\n precision highp int;\\n\";",
            "auto prog = GLProgram::createWithByteArrays(ccPositionTextureColor_malivr_vert, ccPositionTextureColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert, ccPositionTextureColor_noMVP_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_COLOR_NO_MVP);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_malivr_vert, ccPositionTextureColorAlphaTest_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_ALPHA_TEST);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert, ccPositionTextureColorAlphaTest_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_ALPHA_TEST_NO_MV);",
            "prog = GLProgram::createWithByteArrays(ccPositionColor_malivr_vert ,ccPositionColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccPositionColorTextureAsPointsize_malivr_vert ,ccPositionColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_COLOR_TEXASPOINTSIZE);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert ,ccPositionColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_COLOR_NO_MVP);",
            "prog = GLProgram::createWithByteArrays(ccPositionTexture_malivr_vert ,ccPositionTexture_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE);",
            "prog = GLProgram::createWithByteArrays(ccPositionTexture_uColor_malivr_vert, ccPositionTexture_uColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_U_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureA8Color_malivr_vert, ccPositionTextureA8Color_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_TEXTURE_A8_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccPosition_uColor_malivr_vert, ccPosition_uColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_U_COLOR);",
            "prog->bindAttribLocation(\"aVertex\", GLProgram::VERTEX_ATTRIB_POSITION);",
            "prog = GLProgram::createWithByteArrays(ccPositionColorLengthTexture_malivr_vert, ccPositionColorLengthTexture_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_LENGTH_TEXTURE_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccLabel_malivr_vert, ccLabelDistanceFieldNormal_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_LABEL_DISTANCEFIELD_NORMAL);",
            "prog = GLProgram::createWithByteArrays(ccLabel_malivr_vert, ccLabelDistanceFieldGlow_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_LABEL_DISTANCEFIELD_GLOW);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert, ccPositionTexture_GrayScale_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_POSITION_GRAYSCALE);",
            "prog = GLProgram::createWithByteArrays(ccLabel_malivr_vert, ccLabelNormal_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_LABEL_NORMAL);",
            "prog = GLProgram::createWithByteArrays(ccLabel_malivr_vert, ccLabelOutline_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_LABEL_OUTLINE);",
            "prog = GLProgram::createWithByteArrays(cc3D_PositionTex_malivr_vert, cc3D_Color_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_POSITION);",
            "prog = GLProgram::createWithByteArrays(cc3D_PositionTex_malivr_vert, cc3D_ColorTex_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_POSITION_TEXTURE);",
            "prog = GLProgram::createWithByteArrays(cc3D_SkinPositionTex_malivr_vert, cc3D_ColorTex_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_SKINPOSITION_TEXTURE);",
            "GLchar def[256];",
            "auto conf = Configuration::getInstance();",
            "snprintf(def, sizeof(def)-1, \"\\n#define MAX_DIRECTIONAL_LIGHT_NUM %d \\n\" ",
            "              \"\\n#define MAX_POINT_LIGHT_NUM %d \\n\" ",
            "              \"\\n#define MAX_SPOT_LIGHT_NUM %d \\n\", ",
            "              conf->getMaxSupportDirLightInShader(), ",
            "              conf->getMaxSupportPointLightInShader(), ",
            "              conf->getMaxSupportSpotLightInShader()); ",
            "std::string stdDef = std::string(def); ",
            "prog = GLProgram::createWithByteArrays((stdDef + std::string(cc3D_PositionNormalTex_malivr_vert)).c_str(), (stdDef + std::string(cc3D_ColorNormal_malivr_frag)).c_str(), programHeaders, \"\"); ",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_POSITION_NORMAL);",
            "prog = GLProgram::createWithByteArrays((stdDef + std::string(cc3D_PositionNormalTex_malivr_vert)).c_str(), (stdDef + std::string(cc3D_ColorNormalTex_malivr_frag)).c_str(), programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_POSITION_NORMAL_TEXTURE);",
            "prog = GLProgram::createWithByteArrays((stdDef + std::string(cc3D_SkinPositionNormalTex_malivr_vert)).c_str(), (stdDef + std::string(cc3D_ColorNormalTex_malivr_frag)).c_str(), programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_SKINPOSITION_NORMAL_TEXTURE);",
            "std::string normalMapDef = \"\\n#define USE_NORMAL_MAPPING 1 \\n\";",
            "prog = GLProgram::createWithByteArrays((stdDef + normalMapDef + std::string(cc3D_PositionNormalTex_malivr_vert)).c_str(), (stdDef + normalMapDef + std::string(cc3D_ColorNormalTex_malivr_frag)).c_str(), programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_POSITION_BUMPEDNORMAL_TEXTURE);",
            "prog = GLProgram::createWithByteArrays((stdDef + normalMapDef + std::string(cc3D_SkinPositionNormalTex_malivr_vert)).c_str(), (stdDef + normalMapDef + std::string(cc3D_ColorNormalTex_malivr_frag)).c_str(), programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_SKINPOSITION_BUMPEDNORMAL_TEXTURE);",
            "prog = GLProgram::createWithByteArrays(cc3D_Particle_malivr_vert, cc3D_Particle_tex_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_PARTICLE_COLOR);",
            "prog = GLProgram::createWithByteArrays(cc3D_Particle_malivr_vert, cc3D_Particle_color_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_PARTICLE_TEXTURE);",
            "prog = GLProgram::createWithByteArrays(cc3D_Skybox_malivr_vert, cc3D_Skybox_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_SKYBOX);",
            "prog = GLProgram::createWithByteArrays(cc3D_Terrain_malivr_vert, cc3D_Terrain_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_3D_TERRAIN);",
            "prog = GLProgram::createWithByteArrays(ccCameraClearMalivrVert, ccCameraClearMalivrFrag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_CAMERA_CLEAR);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_malivr_vert, ccETC1ASPositionTextureColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_ETC1AS_POSITION_TEXTURE_COLOR);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert, ccETC1ASPositionTextureColor_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_ETC1AS_POSITION_TEXTURE_COLOR_NO_MVP);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_malivr_vert, ccETC1ASPositionTextureGray_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_ETC1AS_POSITION_TEXTURE_GRAY);",
            "prog = GLProgram::createWithByteArrays(ccPositionTextureColor_noMVP_malivr_vert, ccETC1ASPositionTextureGray_malivr_frag, programHeaders, \"\");",
            "GLProgramCache::getInstance()->addGLProgram(prog, GLProgram::SHADER_NAME_ETC1AS_POSITION_TEXTURE_GRAY_NO_MVP);"
        ]
    },
    "Android.mk":{
        "local_src_files":[
            "malivr-sdk/CCVRMaliVRRenderer.cpp",
            "malivr-sdk/CCVRMaliVRHeadTracker.cpp",
            "malivr-sdk/CCVRMaliVRShaders.cpp"
        ]
    }
}

